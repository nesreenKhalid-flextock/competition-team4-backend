# Generated by Django 5.2.3 on 2025-06-17 11:43

import base.enums
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("base", "0001_initial"),
    ]

    operations = [
        migrations.RenameField(
            model_name="userbalance",
            old_name="balance",
            new_name="amount",
        ),
        migrations.RemoveField(
            model_name="grouporderitem",
            name="name",
        ),
        migrations.AddField(
            model_name="grouporder",
            name="created_at",
            field=models.DateTimeField(
                auto_now_add=True, default=django.utils.timezone.now
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="grouporder",
            name="created_by",
            field=models.ForeignKey(
                default=1,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="created_orders",
                to="base.user",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="grouporder",
            name="delivery_fees",
            field=models.FloatField(default=0.0),
        ),
        migrations.AddField(
            model_name="grouporder",
            name="discount",
            field=models.FloatField(default=0.0),
        ),
        migrations.AddField(
            model_name="grouporder",
            name="name",
            field=models.CharField(max_length=255, null=True),
        ),
        migrations.AddField(
            model_name="grouporder",
            name="shop",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="group_orders",
                to="base.shop",
            ),
        ),
        migrations.AddField(
            model_name="grouporder",
            name="status",
            field=models.CharField(
                choices=base.enums.GroupOrderStatusEnum.choices,
                default="open",
                max_length=50,
            ),
        ),
        migrations.AddField(
            model_name="grouporder",
            name="total_price",
            field=models.FloatField(default=0),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="grouporder",
            name="updated_at",
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name="grouporder",
            name="vat",
            field=models.FloatField(default=0.0),
        ),
        migrations.AddField(
            model_name="grouporderitem",
            name="product",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="group_order_items",
                to="base.product",
            ),
        ),
        migrations.AddField(
            model_name="grouporderitem",
            name="user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="group_order_items",
                to="base.user",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="image",
            field=models.ImageField(blank=True, null=True, upload_to="product_images/"),
        ),
        migrations.AddField(
            model_name="shop",
            name="description",
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="shop",
            name="menu_image",
            field=models.ImageField(blank=True, null=True, upload_to="shop_menus/"),
        ),
        migrations.AddField(
            model_name="user",
            name="instapay_address",
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name="user",
            name="profile_picture",
            field=models.ImageField(
                blank=True, null=True, upload_to="profile_pictures/"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="product",
            unique_together={("shop", "name")},
        ),
        migrations.CreateModel(
            name="GroupOrderParticipant",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("amount", models.FloatField(default=0.0)),
                ("paid_amount", models.FloatField(default=0.0)),
                ("delivery_fees", models.FloatField(default=0.0)),
                ("vat", models.FloatField(default=0.0)),
                ("discount", models.FloatField(default=0.0)),
                (
                    "payment_method",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "payment_transaction_image",
                    models.ImageField(
                        blank=True, null=True, upload_to="payment_transactions/"
                    ),
                ),
                (
                    "group_order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="participants",
                        to="base.grouporder",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="group_orders_participated",
                        to="base.user",
                    ),
                ),
            ],
        ),
    ]
